SOURCE TYPES:

		In Java, there are 3 types of source

	CLASS:

		public class ExampleClass{
		}

	INTERFACE:

		public interface ExampleInterface{
		}

		Definition:

			An interface is a reference type in Java. It is similar to class. It is a collection of abstract methods. A class implements an interface, thereby inheriting the abstract methods of the interface.

			Along with abstract methods, an interface may also contain constants, default methods, static methods, and nested types. Method bodies exist only for default methods and static methods.

			Writing an interface is similar to writing a class. But a class describes the attributes and behaviors of an object. And an interface contains behaviors that a class implements.

			Unless the class that implements the interface is abstract, all the methods of the interface need to be defined in the class.

				-An interface is a contract between a class and the outside world

				-It provides a set of abstract methods

				- A class implements an interface

			 	- The class provides the behaviors included in the interface

			 	- An interface can also store constants

	 	Declaring an interface:

	 		An interface is made similarly to aclass in that you write it with variables and methods in the field

	ENUM:

		public enum ExampleEnum{
		}